{"ast":null,"code":"var _jsxFileName = \"/Users/mac/your-app-name/src/FormContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormContainer = ({\n  selectedDocument\n}) => {\n  _s();\n  const [formInfo, setFormInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (selectedDocument) {\n      setIsLoading(true);\n      const apiUrl = `https://old.verif.tools/api/integration/generator-full-information/${selectedDocument}`;\n      fetch(apiUrl).then(response => response.json()).then(data => {\n        setFormInfo(data);\n        setIsLoading(false);\n      }).catch(error => {\n        console.error('Error fetching document info:', error);\n        setError(error.message);\n        setIsLoading(false);\n      });\n    } else {\n      setFormInfo(null); // Reset form info when no document is selected\n    }\n  }, [selectedDocument]);\n  const renderFormFields = fields => {\n    return fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.input_label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        name: field.input_name,\n        defaultValue: field.value,\n        required: field.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this));\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: formInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: formInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), formInfo.steps && formInfo.steps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: step.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), renderFormFields(step.fields)]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(FormContainer, \"HELAGOJJEcSh9HJOpRVYvgdAfew=\");\n_c = FormContainer;\nexport default FormContainer;\nvar _c;\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FormContainer","selectedDocument","_s","formInfo","setFormInfo","isLoading","setIsLoading","error","setError","apiUrl","fetch","then","response","json","data","catch","console","message","renderFormFields","fields","map","field","children","input_label","fileName","_jsxFileName","lineNumber","columnNumber","type","name","input_name","defaultValue","value","required","id","className","steps","step","_c","$RefreshReg$"],"sources":["/Users/mac/your-app-name/src/FormContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.css';\n\nconst FormContainer = ({ selectedDocument }) => {\n  const [formInfo, setFormInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (selectedDocument) {\n      setIsLoading(true);\n      const apiUrl = `https://old.verif.tools/api/integration/generator-full-information/${selectedDocument}`;\n      fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n          setFormInfo(data);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.error('Error fetching document info:', error);\n          setError(error.message);\n          setIsLoading(false);\n        });\n    } else {\n      setFormInfo(null); // Reset form info when no document is selected\n    }\n  }, [selectedDocument]);\n\n  const renderFormFields = (fields) => {\n    return fields.map(field => (\n      <div key={field.id}>\n        <label>{field.input_label}</label>\n        <input \n          type={field.type} \n          name={field.input_name} \n          defaultValue={field.value} \n          required={field.required} \n        />\n      </div>\n    ));\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"form-container\">\n      {formInfo && (\n        <>\n          <h2>{formInfo.name}</h2>\n          {formInfo.steps && formInfo.steps.map(step => (\n            <div key={step.id}>\n              <h3>{step.name}</h3>\n              {renderFormFields(step.fields)}\n            </div>\n          ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FormContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}