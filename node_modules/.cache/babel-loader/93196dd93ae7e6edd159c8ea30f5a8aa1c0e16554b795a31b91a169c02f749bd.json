{"ast":null,"code":"var _jsxFileName = \"/Users/mac/your-app-name/src/FormContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormContainer = ({\n  documentData\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [generatedImageUrl, setGeneratedImageUrl] = useState(null); // State for image URL\n\n  useEffect(() => {\n    if (documentData) {\n      const initialFormData = {};\n      documentData.steps.forEach(step => {\n        step.fields.forEach(field => {\n          initialFormData[field.input_name] = field.value || '';\n        });\n      });\n      setFormData(initialFormData);\n    }\n  }, [documentData]);\n  const handleInputChange = (e, inputName) => {\n    setFormData({\n      ...formData,\n      [inputName]: e.target.value\n    });\n  };\n  const handleFileChange = (e, inputName) => {\n    setFormData({\n      ...formData,\n      [inputName]: e.target.files[0]\n    });\n  };\n  const renderInputField = field => {\n    if (field.type === 'file') {\n      let placeholderImage;\n      if (field.input_name === 'image1') {\n        placeholderImage = 'https://example.com/image1.jpg';\n      } else if (field.input_name === 'image2') {\n        placeholderImage = 'https://example.com/image2.jpg';\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.input_label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: placeholderImage,\n          alt: field.input_label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileChange(e, field.input_name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.input_label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field.type,\n          value: formData[field.input_name],\n          onChange: e => handleInputChange(e, field.input_name),\n          placeholder: field.input_placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const handleGenerateClick = async () => {\n    setIsProcessing(true);\n    const apiEndpoint = '/api/integration/generate/';\n    const data = new FormData();\n    for (const key in formData) {\n      data.append(key, formData[key]);\n    }\n    try {\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        body: data\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setGeneratedImageUrl(result.image_url); // Update image URL state\n      } else {\n        console.error('Error processing image:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setIsProcessing(false);\n  };\n  const renderFormFields = fields => {\n    return fields.map(field => renderInputField(field));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: documentData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: documentData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), documentData.steps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: step.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), renderFormFields(step.fields)]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateClick,\n        disabled: isProcessing,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please allow 10-30 seconds for the result to show.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 28\n      }, this), generatedImageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: generatedImageUrl,\n        alt: \"Generated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(FormContainer, \"aQhgFPHykEK6zDC12S4k0jLYQ3M=\");\n_c = FormContainer;\nexport default FormContainer;\nvar _c;\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FormContainer","documentData","_s","formData","setFormData","isProcessing","setIsProcessing","generatedImageUrl","setGeneratedImageUrl","initialFormData","steps","forEach","step","fields","field","input_name","value","handleInputChange","e","inputName","target","handleFileChange","files","renderInputField","type","placeholderImage","className","children","input_label","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onChange","id","placeholder","input_placeholder","handleGenerateClick","apiEndpoint","data","FormData","key","append","response","fetch","method","body","ok","result","json","image_url","console","error","statusText","renderFormFields","map","name","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mac/your-app-name/src/FormContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css';\n\nconst FormContainer = ({ documentData }) => {\n  const [formData, setFormData] = useState({});\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [generatedImageUrl, setGeneratedImageUrl] = useState(null); // State for image URL\n\n  useEffect(() => {\n    if (documentData) {\n      const initialFormData = {};\n      documentData.steps.forEach(step => {\n        step.fields.forEach(field => {\n          initialFormData[field.input_name] = field.value || '';\n        });\n      });\n      setFormData(initialFormData);\n    }\n  }, [documentData]);\n\n  const handleInputChange = (e, inputName) => {\n    setFormData({ ...formData, [inputName]: e.target.value });\n  };\n\n  const handleFileChange = (e, inputName) => {\n    setFormData({ ...formData, [inputName]: e.target.files[0] });\n  };\n\n  const renderInputField = (field) => {\n    if (field.type === 'file') {\n      let placeholderImage;\n      if (field.input_name === 'image1') {\n        placeholderImage = 'https://example.com/image1.jpg';\n      } else if (field.input_name === 'image2') {\n        placeholderImage = 'https://example.com/image2.jpg';\n      }\n\n      return (\n        <div key={field.id} className=\"field-wrapper\">\n          <label>{field.input_label}</label>\n          <img src={placeholderImage} alt={field.input_label} />\n          <input \n            type=\"file\" \n            onChange={(e) => handleFileChange(e, field.input_name)}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div key={field.id} className=\"field-wrapper\">\n          <label>{field.input_label}</label>\n          <input \n            type={field.type} \n            value={formData[field.input_name]} \n            onChange={(e) => handleInputChange(e, field.input_name)}\n            placeholder={field.input_placeholder}\n          />\n        </div>\n      );\n    }\n  };\n\n  const handleGenerateClick = async () => {\n    setIsProcessing(true);\n    const apiEndpoint = '/api/integration/generate/';\n    const data = new FormData();\n\n    for (const key in formData) {\n      data.append(key, formData[key]);\n    }\n\n    try {\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        body: data,\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setGeneratedImageUrl(result.image_url); // Update image URL state\n      } else {\n        console.error('Error processing image:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setIsProcessing(false);\n  };\n\n  const renderFormFields = (fields) => {\n    return fields.map(field => renderInputField(field));\n  };\n\n  return (\n    <div className=\"form-container\">\n      {documentData && (\n        <>\n          <h2>{documentData.name}</h2>\n          {documentData.steps.map(step => (\n            <div key={step.id}>\n              <h3>{step.name}</h3>\n              {renderFormFields(step.fields)}\n            </div>\n          ))}\n          <button onClick={handleGenerateClick} disabled={isProcessing}>\n            Generate\n          </button>\n          {isProcessing && <p>Please allow 10-30 seconds for the result to show.</p>}\n          {generatedImageUrl && <img src={generatedImageUrl} alt=\"Generated\" />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FormContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}