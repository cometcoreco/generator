{"ast":null,"code":"var _jsxFileName = \"/Users/mac/your-app-name/src/FormContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormContainer = ({\n  documentData,\n  onUpdateResultData\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [isProcessing, setIsProcessing] = useState(false);\n  useEffect(() => {\n    const initialFormData = {};\n    documentData === null || documentData === void 0 ? void 0 : documentData.steps.forEach(step => {\n      step.fields.forEach(field => {\n        initialFormData[field.input_name] = field.value || '';\n      });\n    });\n    setFormData(initialFormData);\n  }, [documentData]);\n  const handleInputChange = (e, inputName) => {\n    setFormData({\n      ...formData,\n      [inputName]: e.target.value\n    });\n  };\n  const handleFileChange = (e, inputName) => {\n    setFormData({\n      ...formData,\n      [inputName]: e.target.files[0]\n    });\n  };\n  const renderInputField = field => {\n    const placeholderImage = field.input_name.startsWith('image') && field.type === 'file' ? documentData[`image${field.input_name.slice(-1)}_default`] : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.input_label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), field.type === 'file' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: placeholderImage || 'https://via.placeholder.com/150',\n          alt: field.input_label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileChange(e, field.input_name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type,\n        value: formData[field.input_name],\n        onChange: e => handleInputChange(e, field.input_name),\n        placeholder: field.input_placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n  const handleGenerateClick = async () => {\n    setIsProcessing(true);\n    const apiEndpoint = 'https://old.verif.tools/api/integration/generate/';\n    const data = new FormData();\n    data.append('generator', documentData.slug); // Use slug from documentData\n\n    Object.keys(formData).forEach(key => {\n      data.append(key, formData[key]);\n    });\n    try {\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        body: data\n      });\n      if (response.ok) {\n        const result = await response.json();\n        onUpdateResultData(result.image_url); // Pass the image url back to the App component\n      } else {\n        const errorText = await response.text();\n        console.error('Error processing image:', errorText);\n        onUpdateResultData(`Error processing image: ${errorText}`); // Pass error back to the App component\n      }\n    } catch (error) {\n      console.error('Network or other error:', error.message);\n      onUpdateResultData(`Network or other error: ${error.message}`); // Pass error back to the App component\n    }\n\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: documentData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: documentData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), documentData.steps.map(step => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: step.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), step.fields.map(renderInputField)]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateClick,\n        disabled: isProcessing,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please allow some time for the result to show.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(FormContainer, \"5v6mmDG/inCW+kt7hCR6iMotMWA=\");\n_c = FormContainer;\nexport default FormContainer;\nvar _c;\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FormContainer","documentData","onUpdateResultData","_s","formData","setFormData","isProcessing","setIsProcessing","initialFormData","steps","forEach","step","fields","field","input_name","value","handleInputChange","e","inputName","target","handleFileChange","files","renderInputField","placeholderImage","startsWith","type","slice","className","children","input_label","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onChange","placeholder","input_placeholder","id","handleGenerateClick","apiEndpoint","data","FormData","append","slug","Object","keys","key","response","fetch","method","body","ok","result","json","image_url","errorText","text","console","error","message","name","map","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mac/your-app-name/src/FormContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css';\n\nconst FormContainer = ({ documentData, onUpdateResultData }) => {\n  const [formData, setFormData] = useState({});\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  useEffect(() => {\n    const initialFormData = {};\n    documentData?.steps.forEach(step => {\n      step.fields.forEach(field => {\n        initialFormData[field.input_name] = field.value || '';\n      });\n    });\n    setFormData(initialFormData);\n  }, [documentData]);\n\n  const handleInputChange = (e, inputName) => {\n    setFormData({ ...formData, [inputName]: e.target.value });\n  };\n\n  const handleFileChange = (e, inputName) => {\n    setFormData({ ...formData, [inputName]: e.target.files[0] });\n  };\n\n  const renderInputField = (field) => {\n    const placeholderImage = field.input_name.startsWith('image') && field.type === 'file' \n      ? documentData[`image${field.input_name.slice(-1)}_default`] \n      : null;\n\n    return (\n      <div key={field.id} className=\"field-wrapper\">\n        <label>{field.input_label}</label>\n        {field.type === 'file' ? (\n          <>\n            <img src={placeholderImage || 'https://via.placeholder.com/150'} alt={field.input_label} />\n            <input \n              type=\"file\" \n              onChange={(e) => handleFileChange(e, field.input_name)}\n            />\n          </>\n        ) : (\n          <input \n            type={field.type} \n            value={formData[field.input_name]} \n            onChange={(e) => handleInputChange(e, field.input_name)}\n            placeholder={field.input_placeholder}\n          />\n        )}\n      </div>\n    );\n  };\n\n  const handleGenerateClick = async () => {\n    setIsProcessing(true);\n    const apiEndpoint = 'https://old.verif.tools/api/integration/generate/';\n    const data = new FormData();\n    data.append('generator', documentData.slug); // Use slug from documentData\n\n    Object.keys(formData).forEach(key => {\n      data.append(key, formData[key]);\n    });\n\n    try {\n      const response = await fetch(apiEndpoint, { method: 'POST', body: data });\n\n      if (response.ok) {\n        const result = await response.json();\n        onUpdateResultData(result.image_url); // Pass the image url back to the App component\n      } else {\n        const errorText = await response.text();\n        console.error('Error processing image:', errorText);\n        onUpdateResultData(`Error processing image: ${errorText}`); // Pass error back to the App component\n      }\n    } catch (error) {\n      console.error('Network or other error:', error.message);\n      onUpdateResultData(`Network or other error: ${error.message}`); // Pass error back to the App component\n    }\n\n    setIsProcessing(false);\n  };\n\n  return (\n    <div className=\"form-container\">\n      {documentData && (\n        <>\n          <h2>{documentData.name}</h2>\n          {documentData.steps.map(step => (\n            <div key={step.id}>\n              <h3>{step.name}</h3>\n              {step.fields.map(renderInputField)}\n            </div>\n          ))}\n          <button onClick={handleGenerateClick} disabled={isProcessing}>\n            Generate\n          </button>\n          {isProcessing && <p>Please allow some time for the result to show.</p>}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FormContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}